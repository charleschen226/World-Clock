#include "clockwidget.h"
#include <QtWidgets>

ClockWidget::ClockWidget(int city, QWidget *parent)
    : QWidget(parent)
    , m_city(city)
{
    setupclock();
    m_clock->installEventFilter(this);
    QTimer *timer = new QTimer(this);

    //connect(timer, SIGNAL(timeout()), this, SLOT(update()));
    timer->start(1000);
}

ClockWidget::~ClockWidget()
{

}

void ClockWidget::setupclock()
{
    QStringList cities;
    cities << "NEW YORK" << "LONDON" << "CHINA" << "TOKYO";
    for (int i = 0; i < 1; ++i) {
        m_clock = new QLabel(this);
        QLabel *city = new QLabel(cities.at(m_city), this);

        m_clock->setPixmap(QPixmap(":/content/clock.png"));
        m_clock->move(200 * i + 10, 10);
        city->move(85 + 200 * i, 210);
        m_clock->show();
        city->show();

        m_clock->setAttribute(Qt::WA_DeleteOnClose);
    }
}

void ClockWidget::paintEvent(QPaintEvent *event)
{
    QPainter painter(this);
    QPixmap pixmap;
    pixmap.load(":/content/hour.png");
    painter.setPen(Qt::NoPen);
    painter.drawPixmap(width() / 2, height() / 2, pixmap);
}

bool ClockWidget::eventFilter(QObject *watched, QEvent *event)
{
    if (watched == m_clock && event->type() == QEvent::Paint)
        paintEvent(static_cast<QPaintEvent*>(event));

    return QWidget::eventFilter(watched,event);
}


